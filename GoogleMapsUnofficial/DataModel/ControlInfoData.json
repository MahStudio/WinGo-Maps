{
  "Groups": [
    {
      "UniqueId": "AllControls",
      "Title": "All controls",
      "Subtitle": "",
      "ImagePath": "ms-appx:///Assets/NavigationViewItemIcons/AllControlsIcon.png",
      "Description": "",
      "Items": []
    },
    {
      "UniqueId": "NewControls",
      "Title": "New controls",
      "Subtitle": "",
      "ImagePath": "ms-appx:///Assets/NavigationViewItemIcons/NewControlsIcon.png",
      "Description": "",
      "Items": []
    },
    {
      "UniqueId": "Commanding",
      "Title": "Commanding",
      "Subtitle": "AppBar, CommandBar, AppBarButton, AppBarToggleButton, AppBarSeparator",
      "ImagePath": "ms-appx:///Assets/NavigationViewItemIcons/CommandingIcon.png",
      "Description": "Use app bars to present navigation, commands, and tools to users.",
					"Items": [
						{
							"UniqueId": "AppBar",
							"Title": "AppBar",
							"Subtitle": "A toolbar for displaying application-specific commands, navigation, and tools. Use CommandBar rather than AppBar for the most up-to-date features.",
							"ImagePath": "ms-appx:///Assets/AppBar.png",
							"Description": "An app bar is a UI element that presents navigation, commands, and tools to the user. An app bar can appear at the top of the page, at the bottom of the page, or both. It is hidden by default, and is shown or dismissed when the user right clicks, presses Windows+Z, or swipes from the top or bottom edge of the screen.",
							"Content": "<p>This page shows a simplified navigation bar to demonstrate basic <b>AppBar</b> usage. When you resize the page (by placing apps side-by-side, for example), the </b>AppBar</b> control doesn't resize it's content, so you have to manage that yourself. Look at the <i>AppBarPage.xaml</i> file in Visual Studio to see this simplified app bar. </p><p>This app also uses a shared <b>AppBar</b> in NavigationRootPage for navigation. To see an example of more complex app bar content, look at the files in the <i>Navigation</i> folder in Visual Studio.</p>",
							"IsNew": false,
							"Docs": [
								{
									"Title": "AppBar",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.appbar.aspx"
								},
								{
									"Title": "Quickstart: Adding app bars",
									"Uri": "https://docs.microsoft.com/windows/uwp/controls-and-patterns/app-bars"
								}
							],
							"RelatedControls": [
								"CommandBar",
								"AppBarButton",
								"AppBarToggleButton",
								"AppBarSeparator"
							]
						},
						{
							"UniqueId": "AppBarButton",
							"Title": "AppBarButton",
							"Subtitle": "A button that's styled for use in a CommandBar.",
							"ImagePath": "ms-appx:///Assets/AppBarButton.png",
							"Description": "App bar buttons differ from standard buttons in several ways:\n- Their default appearance is a transparent background with a smaller size.\n- You use the Label and Icon properties to set the content instead of the Content property. The Content property is ignored.\n- The button's IsCompact property controls its size.",
							"Content": "<p>You can open the app bar and toggle the IsCompact button to see how the app bar buttons on this page change.</p><p>Use the <b>Label</b> and <b>Icon</b> properties to define the content of the app bar buttons. Set the <b>Label</b> property to a string to specify the text label. The label is shown by default but is hidden when the button is in its compact state, so you also need to specify a meaningful icon. To do that, set the button's <b>Icon</b> property to an element derived from the <b>IconElement</b> class. Four kinds of icon elements are provided:</p><p><b>FontIcon</b> - The icon is based on a glyph from the specified font family.</p><p><b>BitmapIcon</b> - The icon is based on a bitmap image file with the specified Uri.</p><p><b>PathIcon</b> - The icon is based on Path data.</p><p><b>SymbolIcon</b> - The icon is based on a predefined list of glyphs from the Segoe UI Symbol font.</p><p>Look at the <i>AppBarButtonPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
							"IsNew": false,
							"Docs": [
								{
									"Title": "AppBarButton",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.appbarbutton.aspx"
								},
								{
									"Title": "SymbolIcon",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.symbolicon.aspx"
								},
								{
									"Title": "FontIcon",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.fonticon.aspx"
								},
								{
									"Title": "BitmapIcon",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.bitmapicon.aspx"
								},
								{
									"Title": "PathIcon",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.pathicon.aspx"
								},
								{
									"Title": "Quickstart: Adding app bar buttons",
									"Uri": "https://docs.microsoft.com/windows/uwp/controls-and-patterns/app-bars"
								}
							],
							"RelatedControls": [ "AppBarToggleButton", "AppBarSeparator", "AppBar", "CommandBar" ]
						},
						{
							"UniqueId": "AppBarSeparator",
							"Title": "AppBarSeparator",
							"Subtitle": "A vertical line that's used to visually separate groups of commands in an app bar.",
							"ImagePath": "ms-appx:///Assets/AppBarSeparator.png",
							"Description": "An AppBarSeparator creates a vertical line to visually separate groups of commands in a app bar. It has a compact state with reduced padding to match the compact state of the AppBarButton and AppBarToggleButton controls.",
							"Content": "<p>You can open the app bar and toggle the IsCompact button to see how the app bar buttons and separators on this page change.</p><p>When the <b>IsCompact</b> property is true, the padding around the <b>AppBarSeparator</b> is reduced.</p><p>Look at the <i>AppBarSeparatorPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
							"IsNew": false,
							"Docs": [
															{
																"Title": "AppBarSeparator",
																"Uri": "https://docs.microsoft.com/uwp/api/windows.ui.xaml.controls.appbarseparator"
															}
							],
							"RelatedControls": [
								"AppBarButton",
								"AppBarToggleButton",
								"AppBar",
								"CommandBar"
							]
						},
						{
							"UniqueId": "AppBarToggleButton",
							"Title": "AppBarToggleButton",
							"Subtitle": "A button that can be on, off, or indeterminate like a CheckBox, and is styled for use in an app bar or other specialized UI.",
							"ImagePath": "ms-appx:///Assets/AppBarToggleButton.png",
							"Description": "An AppBarToggleButton looks like an AppBarButton, but works like a CheckBox. It typically has two states, checked (on) or unchecked (off), but can be indeterminate if the IsThreeState property is true. You can determine it's state by checking the IsChecked property.",
							"Content": "<p>You can open the app bar and toggle the IsCompact button to see how the app bar buttons on this page change.</p><p>Look at the <i>AppBarToggleButtonPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
							"IsNew": false,
							"Docs": [
								{
									"Title": "AppBarToggleButton",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.appbartogglebutton.aspx"
								},
								{
									"Title": "SymbolIcon",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.symbolicon.aspx"
								},
								{
									"Title": "FontIcon",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.fonticon.aspx"
								},
								{
									"Title": "BitmapIcon",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.bitmapicon.aspx"
								},
								{
									"Title": "PathIcon",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.pathicon.aspx"
								},
								{
									"Title": "Quickstart: Adding app bar buttons",
									"Uri": "https://docs.microsoft.com/windows/uwp/controls-and-patterns/app-bars"
								}
							],
							"RelatedControls": [
								"AppBarButton",
								"AppBarSeparator",
								"AppBar",
								"CommandBar"
							]
						},
						{
							"UniqueId": "Button",
							"Title": "Button",
							"Subtitle": "A control that responds to user input and raises a Click event.",
							"ImagePath": "ms-appx:///Assets/Button.png",
							"Description": "The Button control provides a Click event to respond to user input from a touch, mouse, keyboard, stylus, or other input device. You can put different kinds of content in a button, such as text or an image, or you can restyle a button to give it a new look.",
							"Content": "<p>The main purpose of a <b>Button</b> is to make something happen when a user clicks it. There are two ways you can make something happen:</p><ul><li>Handle the <b>Click</b> event.</li><li>Bind the <b>Command</b> property to an ICommand implementation that describes the command logic.</li></ul><p>Buttons often have only simple string content, but you can use any object as content. You can also change the style and template to give them any look you want.</p><p>Look at the <i>ButtonPage.xaml</i> file in Visual Studio to see the custom button style and template definitions used on this page.</p>",
							"IsNew": false,
							"Docs": [
								{
									"Title": "Button",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.button.aspx"
								},
								{
									"Title": "Quickstart: Adding button controls",
									"Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/jj153346.aspx"
								}
							],
							"RelatedControls": [
								"ToggleButton",
								"RepeatButton",
								"HyperlinkButton",
								"AppBarButton"
							]
						},
						{
							"UniqueId": "CommandBar",
							"Title": "CommandBar",
							"Subtitle": "A toolbar for displaying application-specific commands that handles layout and resizing of its contents.",
							"ImagePath": "ms-appx:///Assets/CommandBar.png",
							"Description": "The CommandBar simplifies the creation of basic app bars by providing:\n- Automatic layout of commands, with primary commands on the right and secondary commands on the left.\n- Automatic resizing of app bar commands when the app size changes.\nWhen you need an app bar that contains only AppBarButton,AppBarToggleButton , and AppBarSeparator controls, use a CommandBar. If you need more complex content, such as images, progress bars, or text blocks, use an AppBar control.",
							"Content": "<p>The bottom app bar on this page is a <b>CommandBar</b> control.</p><p>Add secondary commands and then resize the app to see how the <b>CommandBar</b> automatically adapts to different widths.</p><p>This <b>CommandBar</b> element is in the ItemPage so it can be shared across all control pages in the app. Look at the <i>ItemPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
							"IsNew": false,
							"Docs": [
								{
									"Title": "CommandBar",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.commandbar.aspx"
								},
															{
																"Title": "Quickstart: Adding app bars",
																"Uri": "https://docs.microsoft.com/windows/uwp/controls-and-patterns/app-bars"
															}
							],
							"RelatedControls": [
								"AppBar",
								"AppBarButton",
								"AppBarToggleButton",
								"AppBarSeparator"
							]
						},
						{
							"UniqueId": "ContentDialog",
							"Title": "ContentDialog",
							"Subtitle": "A dialog box that can be customized to contain any XAML content.",
							"ImagePath": "ms-appx:///Assets/DefaultIcon.png",
							"Description": "Use a ContentDialog to show relavant information or to provide a modal dialog experience that can show any XAML content.",
							"Content": "<p>Look at the <i>ContentDialog.xaml</i> file in Visual Studio to see the full code for this page.</p>",
							"IsNew": false,
							"Docs": [
								{
									"Title": "ContentDialog",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.contentdialog.aspx"
								}
							],
							"RelatedControls": [
								"Flyout",
								"MenuFlyout",
								"ToolTip"
							]
						},
						{
							"UniqueId": "HyperlinkButton",
							"Title": "HyperlinkButton",
							"Subtitle": "A button that appears as hyperlink text, and can navigate to a URI or handle a Click event.",
							"ImagePath": "ms-appx:///Assets/HyperlinkButton.png",
							"Description": "A HyperlinkButton appears as a text hyperlink. When a user clicks it, it opens the page you specify in the NavigateUri property in the default browser. Or you can handle its Click event, typically to navigate within your app.",
							"Content": "<p>A <b>HyperlinkButton</b> looks like hyperlink text, but works like a button. You can use it in two ways:</p><ul><li>Set the <b>NavigateUri</b> property. When a user clicks it, it will automatically open the URI in the default browser.</li><li>Handle the <b>Click</b> event. This works just like the <b>Click</b> event of a standard <b>Button</b>, and can be used to navigate within your app.</li></ul><p>Each control page in this app has two sets of hyperlink buttons, one set to open documentation in Internet Explorer, and one set to navigate to related control pages in the app.</p><p>Look at the <i>HyperlinkButtonPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
							"IsNew": false,
							"Docs": [
								{
									"Title": "HyperlinkButton",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.hyperlinkbutton.aspx"
								},
								{
									"Title": "Quickstart: Adding a button",
									"Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/jj153346.aspx"
								}
							],
							"RelatedControls": [
								"Button",
								"ToggleButton",
								"RepeatButton",
								"AppBarButton"
							]
						},
						{
							"UniqueId": "MenuFlyout",
							"Title": "MenuFlyout",
							"Subtitle": "Shows a contextual list of simple commands or options.",
							"ImagePath": "ms-appx:///Assets/MenuFlyout.png",
							"Description": "A MenuFlyout displays lightweight UI that is light dismissed by clicking or tapping off of it. Use it to let the user choose from a contextual list of simple commands or options.",
							"Content": "<p>Look at the <i>MenuFlyoutPage.xaml</i> file in Visual Studio to see the full code.</p>",
							"IsNew": false,
							"Docs": [
								{
									"Title": "MenuFlyout",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.menuflyout.aspx"
								},
								{
									"Title": "MenuFlyoutItem",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.menuflyoutitem.aspx"
								},
								{
									"Title": "MenuFlyoutSeparator",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.menuflyoutseparator.aspx"
								},
								{
									"Title": "ToggleMenuFlyoutItem",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.togglemenuflyoutitem.aspx"
								},
								{
									"Title": "Quickstart: Adding a MenuFlyout",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/dn308516.aspx"
								}
							],
							"RelatedControls": [
								"Flyout",
								"ContentDialog",
								"Button",
								"AppBarButton"
							]
						},
						{
							"UniqueId": "RepeatButton",
							"Title": "RepeatButton",
							"Subtitle": "A button that raises its Click event repeatedly from the time it's pressed until it's released.",
							"ImagePath": "ms-appx:///Assets/Button.png",
							"Description": "The RepeatButton control is like a standard Button, except that the Click event occurs continuously while the user presses the RepeatButton.",
							"Content": "<p>A <b>RepeatButton</b> looks just like a regular <b>Button</b>, but it's <b>Click</b> event occurs continuously while the button is pressed.</p><p>Look at the <i>RepeatButtonPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
							"IsNew": false,
							"Docs": [
								{
									"Title": "RepeatButton",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.repeatbutton.aspx"
								},
								{
									"Title": "Quickstart: Adding button controls",
									"Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/jj153346.aspx"
								}
							],
							"RelatedControls": [
								"Button",
								"ToggleButton",
								"HyperlinkButton",
								"AppBarButton"
							]
						},
            {
              "UniqueId": "SwipeControl",
              "Title": "SwipeControl",
              "Subtitle": "Touch gesture for quick menu actions on items.",
              "ImagePath": "ms-appx:///Assets/Swipe.png",
              "Description": "Touch gesture for quick menu actions on items.",
              "Content": "",
              "IsNew": true,
              "Docs": [
                {
                  "Title": "SwipeControl",
                  "Uri": "https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.controls.swipecontrol"
                },
                {
                  "Title": "SwipeItems",
                  "Uri": "https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.controls.swipeitems"
                }
              ],
              "RelatedControls": [
                "GridView",
                "ListView"
              ]
            },
						{
							"UniqueId": "ToggleButton",
							"Title": "ToggleButton",
							"Subtitle": "A button that can be switched between two states like a CheckBox.",
							"ImagePath": "ms-appx:///Assets/ToggleButton.png",
							"Description": "A ToggleButton looks like a Button, but works like a CheckBox. It typically has two states, checked (on) or unchecked (off), but can be indeterminate if the IsThreeState property is true. You can determine it's state by checking the IsChecked property.",
							"Content": "<p><b>ToggleButton</b> is used as a base class for similar controls like <b>CheckBox</b> and <b>RadioButton</b>. It can be used on its own, but don't use it if a <b>CheckBox</b>, <b>RadioButton</b>, or <b>ToggleSwitch</b> would convey your intent better.</p><p>Look at the <i>ToggleButtonPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
							"IsNew": false,
							"Docs": [
								{
									"Title": "ToggleButton",
									"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.primitives.togglebutton.aspx"
								},
								{
									"Title": "Quickstart: Adding button controls",
									"Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/jj153346.aspx"
								}
							],
							"RelatedControls": [
								"Button",
								"AppBarToggleButton",
								"ToggleSwitch",
								"CheckBox"
							]
						}

					]
    },
    {
      "UniqueId": "Collections",
      "Title": "Collections",
      "Subtitle": "FlipView, GridView, ListView, Pivot, SemanticZoom, Hub",
      "ImagePath": "\uE292",
      "Description": "Use collection controls to display, navigate, and interact with collections of data and media.",
      "Items": [
        {
          "UniqueId": "ComboBox",
          "Title": "ComboBox",
          "Subtitle": "A drop-down list of items a user can select from.",
          "ImagePath": "ms-appx:///Assets/ComboBox.png",
          "Description": "Use a ComboBox when you need to conserve on-screen space and when users select only one option at a time. A ComboBox shows only the currently selected item.",
          "Content": "<p>Look at the <i>ComboBoxPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "ComboBox",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.combobox.aspx"
            },
            {
              "Title": "ComboBoxItem",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.comboboxitem.aspx"
            }
          ],
          "RelatedControls": [
            "ListBox",
            "RadioButton",
            "CheckBox",
            "ListView",
            "AutoSuggestBox",
            "RatingControl"
          ]
        },
        {
          "UniqueId": "FlipView",
          "Title": "FlipView",
          "Subtitle": "Presents a collection of items that the user can flip through, one item at a time.",
          "ImagePath": "ms-appx:///Assets/FlipView.png",
          "Description": "The FlipView lets you flip through a collection of items, one at a time. It's great for displaying images from a gallery, pages of a magazine, or similar items.",
          "Content": "<p><b>FlipView</b> is an <b>ItemsControl</b>, so it can contain a collection of items of any type. To populate the view, add items to the <b>Items</b> collection, or set the <b>ItemsSource</b> property to a data source.</p><p>Look at the <i>FlipViewPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "FlipView",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.flipview.aspx"
            },
            {
              "Title": "Quickstart: Adding FlipView controls",
              "Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/hh781233.aspx"
            }
          ],
          "RelatedControls": [
            "GridView",
            "ListView",
            "SemanticZoom",
            "Hub"
          ]
        },
        {
          "UniqueId": "GridView",
          "Title": "GridView",
          "Subtitle": "Presents a collection of items in rows and columns that can scroll horizontally.",
          "ImagePath": "ms-appx:///Assets/GridView.png",
          "Description": "The GridView lets you show a collection of items arranged in rows and columns that scroll horizontally.",
          "Content": "<p><b>GridView</b> is an <b>ItemsControl</b>, so it can contain a collection of items of any type. To populate the view, add items to the <b>Items</b> collection, or set the <b>ItemsSource</b> property to a data source.</p><p>Set an <b>ItemTemplate</b> to define the look of individual items.</p><p>Look at the <i>GridViewPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "GridView",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.gridview.aspx"
            },
            {
              "Title": "Quickstart: Adding ListView and GridView controls",
              "Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/hh780650.aspx"
            }
          ],
          "RelatedControls": [
            "ListView",
            "FlipView",
            "SemanticZoom",
            "Hub"
          ]
        },
        {
          "UniqueId": "ListBox",
          "Title": "ListBox",
          "Subtitle": "A control that presents an inline list of items that the user can select from.",
          "ImagePath": "ms-appx:///Assets/ListBox.png",
          "Description": "Use a ListBox when you want the options to be visible all the time or when users can select more than one option at a time. ListBox controls are always open, which allows several items to be displayed to the user without user interaction.",
          "Content": "<p>Look at the <i>ListBoxPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "ListBox",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.listbox.aspx"
            },
            {
              "Title": "ListBoxItem",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.listboxitem.aspx"
            }
          ],
          "RelatedControls": [
            "ComboBox",
            "RadioButton",
            "CheckBox",
            "AutoSuggestBox"
          ]
        },
        {
          "UniqueId": "ListView",
          "Title": "ListView",
          "Subtitle": "Presents a collection of items in a list that can scroll vertically.",
          "ImagePath": "ms-appx:///Assets/ListView.png",
          "Description": "The ListView lets you show a collection of items in a list that scrolls vertically.",
          "Content": "<p><b>ListView</b> is an <b>ItemsControl</b>, so it can contain a collection of items of any type. To populate the view, add items to the <b>Items</b> collection, or set the <b>ItemsSource</b> property to a data source.</p><p>Set an <b>ItemTemplate</b> to define the look of individual items.</p><p>Look at the <i>ListViewPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "ListView",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.listview.aspx"
            },
            {
              "Title": "Quickstart: Adding ListView and GridView controls",
              "Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/hh780650.aspx"
            }
          ],
          "RelatedControls": [
            "GridView",
            "FlipView",
            "SemanticZoom",
            "Hub"
          ]
        },
        {
          "UniqueId": "SemanticZoom",
          "Title": "SemanticZoom",
          "Subtitle": "Lets the user zoom between two different views of a collection, making it easier to navigate through large collections of items.",
          "ImagePath": "ms-appx:///Assets/DefaultIcon.png",
          "Description": "The SemanticZoom lets you show grouped data in two different ways, and is useful for quickly navigating through large sets of data.",
          "Content": "<p>Look at the <i>SemanticZoomPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "SemanticZoom",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.semanticzoom.aspx"
            },
            {
              "Title": "Quickstart: Adding SemanticZoom controls",
              "Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/hh781234.aspx"
            }
          ],
          "RelatedControls": [
            "GridView",
            "ListView",
            "Hub"
          ]
        }
      ]
    },
			{
				"UniqueId": "DataInput",
				"Title": "Data Input",
				"Subtitle": "CheckBox, ComboBox, DatePicker, ListBox, RadioButton, Slider, TimePicker, ToggleSwitch",
				"ImagePath": "ms-appx:///Assets/NavigationViewItemIcons/PickerIcon.png",
				"Description": "Use selection controls to let a user set a value or choose between various options.",
				"Items": [
					{
						"UniqueId": "CalendarDatePicker",
						"Title": "CalendarDatePicker",
						"Subtitle": "A control that lets users pick a date value using a calendar.",
						"ImagePath": "ms-appx:///Assets/CalenderDatePicker.png",
						"Description": "A control that lets users pick a date value using a calendar.",
						"Content": "",
						"IsNew": false,
						"Docs": [
							{
								"Title": "CalendarDatePicker",
								"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.calendardatepicker.aspx"
							}
						],
						"RelatedControls": [
							"DatePicker",
							"CalendarView"
						]
					},
					{
						"UniqueId": "CalendarView",
						"Title": "CalendarView",
						"Subtitle": "A control that presents a calendar for a user to choose a date from.",
						"ImagePath": "ms-appx:///Assets/CalendarView.png",
						"Description": "CalendarView shows a larger view for showing and selecting dates.  DatePicker by contrast has a compact view with inline selection.",
						"Content": "<p>Look at the <i>CalendarView.xaml</i> file in Visual Studio to see the full code for this page.</p>",
						"IsNew": false,
						"Docs": [
							{
								"Title": "CalendarView",
								"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.calendarview.aspx"
							}
						],
						"RelatedControls": [
							"CalendarDatePicker",
							"DatePicker",
							"TimePicker"
						]
					},
					{
						"UniqueId": "CheckBox",
						"Title": "CheckBox",
						"Subtitle": "A control that a user can select or clear.",
						"ImagePath": "ms-appx:///Assets/CheckBox.png",
						"Description": "CheckBox controls let the user select a combination of binary options. In contrast, RadioButton controls allow the user to select from mutually exclusive options. The indeterminate state is used to indicate that an option is set for some, but not all, child options. Don't allow users to set an indeterminate state directly to indicate a third option.",
						"Content": "<p>Check and uncheck these controls to see how they look in each state. The label for each <b>CheckBox</b> is defined by its <b>Content</b> property.</p><p>Use a three-state <b>CheckBox</b> to show that none, some, or all of an items sub-options are checked. You have to add some code to do this. Take a look at the methods in the <i>SelectAllMethods</i> region of <i>CheckBoxPage.xaml.cs</i> to see how we did it.</p>",
						"IsNew": false,
						"Docs": [
							{
								"Title": "CheckBox",
								"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.checkbox.aspx"
							}
						],
						"RelatedControls": [
							"RadioButton",
							"ToggleSwitch",
							"ToggleButton"
						]
					},
					{
						"UniqueId": "ColorPicker",
						"Title": "ColorPicker",
						"Subtitle": "A selectable color spectrum.",
						"ImagePath": "ms-appx:///Assets/ColorPicker.png",
						"Description": "A selectable color spectrum.",
						"Content": "",
						"IsNew": true,
						"Docs": [
													{
														"Title": "ColorPicker",
														"Uri": "https://docs.microsoft.com/uwp/api/Windows.UI.Xaml.Controls.ColorPicker"
													}
						],
						"RelatedControls": [
							"ComboBox"
						]
					},
					{
						"UniqueId": "DatePicker",
						"Title": "DatePicker",
						"Subtitle": "A configurable control that lets a user pick a date value.",
						"ImagePath": "ms-appx:///Assets/DatePicker.png",
						"Description": "Use a DatePicker to let users set a date in your app, for example to schedule an appointment. The DatePicker displays three controls for month, date, and year. These controls are easy to use with touch or mouse, and they can be styled and configured in several different ways.",
						"Content": "<p>Look at the <i>DatePickerPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
						"IsNew": false,
						"Docs": [
							{
								"Title": "DatePicker",
								"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.datepicker.aspx"
							},
							{
								"Title": "Quickstart: Adding a DatePicker",
								"Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/dn308514.aspx"
							}
						],
						"RelatedControls": [
							"CalendarDatePicker",
							"CalendarView",
							"TimePicker"
						]
					},
					{
						"UniqueId": "RadioButton",
						"Title": "RadioButton",
						"Subtitle": "A control that allows a user to select a single option from a group of options. When radio buttons are grouped together they are mutually exclusive.",
						"ImagePath": "ms-appx:///Assets/RadioButton.png",
						"Description": "Use RadioButtons to let a user choose between mutually exclusive, related options.",
						"Content": "<p>Look at the <i>RadioButtonPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
						"IsNew": false,
						"Docs": [
							{
								"Title": "RadioButton",
								"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.radiobutton.aspx"
							}
						],
						"RelatedControls": [
							"CheckBox",
							"ToggleSwitch",
							"ToggleButton"
						]
					},
					{
						"UniqueId": "RatingControl",
						"Title": "RatingControl",
						"Subtitle": "Rate something 1 to 5 stars.",
						"ImagePath": "ms-appx:///Assets/RatingControl.png",
						"Description": "Rate something 1 to 5 stars.",
						"Content": "",
						"IsNew": true,
						"Docs": [
													{
														"Title": "RatingControl",
														"Uri": "https://docs.microsoft.com/uwp/api/Windows.UI.Xaml.Controls.RatingControl"
													}
						],
						"RelatedControls": [
							"Slider",
							"ComboBox"
						]
					},
					{
						"UniqueId": "Slider",
						"Title": "Slider",
						"Subtitle": "A control that lets the user select from a range of values by moving a Thumb control along a track.",
						"ImagePath": "ms-appx:///Assets/Slider.png",
						"Description": "Use a Slider when you want your users to be able to set defined, contiguous values (such as volume or brightness) or a range of discrete values (such as screen resolution settings).",
						"Content": "<p>Look at the <i>SliderPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
						"IsNew": false,
						"Docs": [
							{
								"Title": "Slider",
								"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.slider.aspx"
							}
						],
						"RelatedControls": [
							"ComboBox",
							"ListBox",
							"RatingControl"
						]
					},
					{
						"UniqueId": "TimePicker",
						"Title": "TimePicker",
						"Subtitle": "A configurable control that lets a user pick a time value.",
						"ImagePath": "ms-appx:///Assets/TimePicker.png",
						"Description": "Use a TimePicker to let users set a time in your app, for example to set a reminder. The TimePicker displays three controls for month, day, and and AM/PM. These controls are easy to use with touch or mouse, and they can be styled and configured in several different ways.",
						"Content": "<p>Look at the <i>TimePickerPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
						"IsNew": false,
						"Docs": [
							{
								"Title": "TimePicker",
								"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.timepicker.aspx"
							},
							{
								"Title": "Quickstart: Adding a TimePicker",
								"Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/dn308517.aspx"
							}
						],
						"RelatedControls": [
							"DatePicker",
							"CalendarView"
						]
					},
					{
						"UniqueId": "ToggleSwitch",
						"Title": "ToggleSwitch",
						"Subtitle": "A switch that can be toggled between 2 states.",
						"ImagePath": "ms-appx:///Assets/ToggleSwitch.png",
						"Description": "Use ToggleSwitch controls to present users with exactly two mutually exclusive options (like on/off), where choosing an option results in an immediate commit. A toggle switch should have a single label.",
						"Content": "<p>Look at the <i>ToggleSwitchPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
						"IsNew": false,
						"Docs": [
							{
								"Title": "ToggleSwitch",
								"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.toggleswitch.aspx"
							}
						],
						"RelatedControls": [
							"ToggleButton",
							"RadioButton",
							"CheckBox",
							"AppBarToggleButton"
						]
					}
				]
			},
    {
      "UniqueId": "Indicators",
      "Title": "Indicators",
      "Subtitle": "ProgressBar, ProgressRing",
      "ImagePath": "ms-appx:///Assets/NavigationViewItemIcons/ProgressIcon.png",
      "Description": "Use progress controls to graphically represent ongoing activity or the progress of a task.",
      "Items": [
        {
          "UniqueId": "ProgressBar",
          "Title": "ProgressBar",
          "Subtitle": "Shows the apps progress on a task, or that the app is performing ongoing work that doesn't block user interaction.",
          "ImagePath": "ms-appx:///Assets/ProgressBar.png",
          "Description": "The ProgressBar has two different visual representations:\nIndeterminate - shows that a task is ongoing, but doesn't block user interaction.\nDeterminate - shows how much progress has been made on a known amount of work.",
          "Content": "<p>Look at the <i>ProgressBarPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "ProgressBar",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.button.aspx"
            },
            {
              "Title": "Quickstart: Adding progress controls",
              "Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/hh780651.aspx"
            },
            {
              "Title": "Guidelines",
              "Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/hh780631.aspx"
            }
          ],
          "RelatedControls": [
            "ProgressRing"
          ]
        },
        {
          "UniqueId": "ProgressRing",
          "Title": "ProgressRing",
          "Subtitle": "Shows that the app is performing ongoing work that blocks user interaction.",
          "ImagePath": "ms-appx:///Assets/ProgressRing.png",
          "Description": "Use a ProgressRing to show that the app is performing ongoing work that blocks user interaction.",
          "Content": "<p>Look at the <i>ProgressRingPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "ProgressRing",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.progressring.aspx"
            },
            {
              "Title": "Quickstart: Adding progress controls",
              "Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/hh780651.aspx"
            },
            {
              "Title": "Guidelines",
              "Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/hh780631.aspx"
            }
          ],
          "RelatedControls": [
            "ProgressBar"
          ]
        }
      ]
    },
    {
      "UniqueId": "Layout",
      "Title": "Layout controls",
      "Subtitle": "Border, Canvas, Grid, RelativePanel, ScrollViewer, SplitView, StackPanel, VariableSizedWrapGrid, ViewBox",
      "ImagePath": "\uE80A",
      "Description": "Use layout controls to arrange the controls and content in your app.",
      "Items": [
        {
          "UniqueId": "Border",
          "Title": "Border",
          "Subtitle": "A container control that draws a boundary line, background, or both, around another object.",
          "ImagePath": "ms-appx:///Assets/Border.png",
          "Description": "Use a Border control to draw a boundary line, background, or both, around another object. A Border can contain only one child object.",
          "Content": "<p>A <b>Border</b> can contain only one child object. If you want to put a border around multiple objects, first wrap them in a container object such as <b>StackPanel</b> and make the <b>StackPanel</b> the child of the <b>Border</b>.</p><p>You can change the appearance of a <b>Border</b> by setting basic properties:</p><ul><li>Width/Height</li><li>BorderBrush</li><li>BorderThickness</li><li>Background</li></ul><p></p><p>Most of the control pages in this app have XAML blocks to show basic usage. The appearance of the XAML blocks is defined by a Border control. Look at the <i>CodeBorderStyle</i> resource in App.xaml to see the <b>Style</b> that's applied to the Borders.</p><p>Look at the <i>BorderPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "Border",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.border.aspx"
            },
            {
              "Title": "Quickstart: Adding layout controls",
              "Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/hh969155.aspx"
            }
          ],
          "RelatedControls": [
            "Canvas",
            "Grid",
            "StackPanel",
            "VariableSizedWrapGrid",
            "RelativePanel"
          ]
        },
        {
          "UniqueId": "Canvas",
          "Title": "Canvas",
          "Subtitle": "A layout panel that supports absolute positioning of child elements relative to the top left corner of the canvas.",
          "ImagePath": "ms-appx:///Assets/Canvas.png",
          "Description": "The Canvas provides absolute positioning of controls or content. Content is positioned relative to the Canvas using the Canvas.Top and Canvas.Left attached properties.",
          "Content": "<p>Items are positioned on the <b>Canvas</b> using the <b>Canvas.Top</b> and <b>Canvas.Left</b> attached properties. Use the sliders to change these properties for the red rectangle and see how it moves around.</p><p>To see the effect of the <b>ZIndex</b> attached property, make sure the red rectangle is overlapping the other rectangles.</p><p>Look at the <i>CanvasPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "Canvas",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.canvas.aspx"
            },
            {
              "Title": "Quickstart: Adding layout controls",
              "Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/hh969155.aspx"
            }
          ],
          "RelatedControls": [
            "Border",
            "Grid",
            "StackPanel",
            "VariableSizedWrapGrid",
            "RelativePanel"
          ]
        },
        {
          "UniqueId": "Flyout",
          "Title": "Flyout",
          "Subtitle": "Shows contextual information and enables user interaction.",
          "ImagePath": "ms-appx:///Assets/Flyout.png",
          "Description": "A Flyout displays lightweight UI that is either information, or requires user interaction. Unlike a dialog, a Flyout can be light dismissed by clicking or tapping off of it. Use it to collect input from the user, show more details about an item, or ask the user to confirm an action.",
          "Content": "<p>Look at the <i>FlyoutPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "Flyout",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.flyout.aspx"
            },
            {
              "Title": "Quickstart: Adding a Flyout",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/dn308515.aspx"
            }
          ],
          "RelatedControls": [
            "ContentDialog",
            "MenuFlyout",
            "Button",
            "AppBarButton"
          ]
        },
        {
          "UniqueId": "Grid",
          "Title": "Grid",
          "Subtitle": "A layout panel that supports arranging child elements in rows and columns. ",
          "ImagePath": "ms-appx:///Assets/Grid.png",
          "Description": "The Grid is used to arrange controls and content in rows and columns. Content is positioned in the grid using Grid.Row and Grid.Column attached properties.",
          "Content": "<p>Look at the <i>GridPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "Grid",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.grid.aspx"
            },
            {
              "Title": "Quickstart: Adding layout controls",
              "Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/hh969155.aspx"
            }
          ],
          "RelatedControls": [
            "Border",
            "Canvas",
            "StackPanel",
            "VariableSizedWrapGrid",
            "RelativePanel"
          ]
        },
        {
          "UniqueId": "ParallaxView",
          "Title": "ParallaxView",
          "Subtitle": "A container control that provides the parallax effect when scrolling.",
          "ImagePath": "ms-appx:///Assets/ParallaxView.png",
          "Description": "A container control that provides the parallax effect when scrolling.",
          "Content": "",
          "IsNew": true,
          "Docs": [
											{
												"Title": "ParallaxView",
												"Uri": "https://docs.microsoft.com/uwp/api/Windows.UI.Xaml.Controls.Parallaxview"
											}
          ],
          "RelatedControls": [
            "ScrollViewer"
          ]
        },
        {
          "UniqueId": "RelativePanel",
          "Title": "RelativePanel",
          "Subtitle": "A panel that uses relationships between elements to define layout.",
          "ImagePath": "ms-appx:///Assets/RelativePanel.png",
          "Description": "Use a RelativePanel to layout elements by defining the relationships between elements and in relation to the panel.",
          "Content": "<p>Look at the <i>RelativePanelPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "RelativePanel",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.relativepanel.aspx"
            }
          ],
          "RelatedControls": [
            "Grid",
            "StackPanel",
            "Border",
            "Canvas",
            "ViewBox"
          ]
        },
        {
          "UniqueId": "ScrollViewer",
          "Title": "ScrollViewer",
          "Subtitle": "A container control that lets the user pan and zoom its content.",
          "ImagePath": "ms-appx:///Assets/ScrollViewer.png",
          "Description": "A ScrollViewer lets a user scroll, pan, and zoom to see content that's larger than the viewable area. Many content controls, like ListView, have ScrollViewers built into their control templates to provide automatic scrolling.",
          "Content": "<p>Look at the <i>ScrollViewerPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "ScrollViewer",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.scrollviewer.aspx"
            }
          ],
          "RelatedControls": [
            "ViewBox",
            "Canvas",
            "Grid",
            "StackPanel",
            "RelativePanel",
            "ParallaxView"
          ]
        },
        {
          "UniqueId": "SplitView",
          "Title": "SplitView",
          "Subtitle": "A container that has 2 content areas, with multiple display options for the pane.",
          "ImagePath": "ms-appx:///Assets/SplitView.png",
          "Description": "Use a SplitView to display content, such as navigation options, in a pane on the side.  There are multiple options for displaying the pane, namely CompactOverlay, Compact, Overlay, Inline.  If you are looking for a reference to the hamburger pattern, please see the links in the documentation below.",
          "Content": "<p>Look at the <i>SplitViewPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "SplitView",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.splitview.aspx"
            },
            {
              "Title": "Hamburger pattern",
              "Uri": "http://go.microsoft.com/fwlink/p/?LinkId=619902&clcid=0x409"
            }
          ],
          "RelatedControls": [
            "StackPanel",
            "ListView",
            "GridView",
            "Grid",
            "RelativePanel"
          ]
        },
        {
          "UniqueId": "StackPanel",
          "Title": "StackPanel",
          "Subtitle": "A layout panel that arranges child elements into a single line that can be oriented horizontally or vertically.",
          "ImagePath": "ms-appx:///Assets/StackPanel.png",
          "Description": "A StackPanel is used to arrange items in a line, either horizontally or vertically.",
          "Content": "<p>Look at the <i>StackPanelPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "StackPanel",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.stackpanel.aspx"
            },
            {
              "Title": "Quickstart: Adding layout controls",
              "Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/hh969155.aspx"
            }
          ],
          "RelatedControls": [
            "Border",
            "Canvas",
            "Grid",
            "VariableSizedWrapGrid",
            "RelativePanel"
          ]
        },
        {
          "UniqueId": "ToolTip",
          "Title": "ToolTip",
          "Subtitle": "Displays information for an element in a pop-up window.",
          "ImagePath": "ms-appx:///Assets/ToolTip.png",
          "Description": "A ToolTip shows more information about a UI element. You might show information about what the element does, or what the user should do. The ToolTip is shown when a user hovers over or presses and holds the UI element.",
          "Content": "<p>Look at the <i>ToolTipPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "ToolTip",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.tooltip.aspx"
            }
          ],
          "RelatedControls": [
            "Flyout",
            "ContentDialog"
          ]
        },
        {
          "UniqueId": "VariableSizedWrapGrid",
          "Title": "VariableSizedWrapGrid",
          "Subtitle": "A layout panel that supports arranging child elements in rows and columns. Each child element can span multiple rows and columns.",
          "ImagePath": "ms-appx:///Assets/VariableSizedWrapGrid.png",
          "Description": "A VariableSizedWrapGrip is used to create grid layouts where content can span multiple rows and columns.",
          "Content": "<p>Elements are arranged in rows or columns that automatically wrap to a new row or column when the <b>MaximumRowsOrColumns</b> value is reached.</p><p>Whether elements are arranged in rows or columns is specified by the <b>Orientation</b> property.</p><p>Elements can span multiple rows and columns using <b>VariableSizedWrapGrid.RowSpan</b> and <b>VariableSizedWrapGrid.ColumnSpan</b> attached properties.</p><p>Elements are sized as specified by the <b>ItemHeight</b> and <b>ItemWidth</b> properties.</p><p>Look at the <i>VariableSizedWrapGridPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "VariableSizedWrapGrid",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.variablesizedwrapgrid.aspx"
            },
            {
              "Title": "Quickstart: Adding layout controls",
              "Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/hh969155.aspx"
            }
          ],
          "RelatedControls": [
            "Border",
            "Canvas",
            "Grid",
            "StackPanel",
            "RelativePanel"
          ]
        },
        {
          "UniqueId": "ViewBox",
          "Title": "ViewBox",
          "Subtitle": "A container control that scales its content to a specified size.",
          "ImagePath": "ms-appx:///Assets/ViewBox.png",
          "Description": "Use a ViewBox control scale content up or down to a specified size.",
          "Content": "<p>Look at the <i>ViewBoxPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "Viewbox",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.viewbox.aspx"
            }
          ],
          "RelatedControls": [
            "ScrollViewer",
            "Canvas",
            "Grid",
            "StackPanel",
            "RelativePanel"
          ]
        }
      ]
    },
			{
				"UniqueId": "Navigation",
				"Title": "Navigation",
				"Subtitle": "Button, HyperlinkButton, RepeatButton, ToggleButton",
				"ImagePath": "\uE700",
				"Description": "Use button controls to let users perform an action, like submitting a form or showing a menu.",
				"Items": [
					{
						"UniqueId": "Hub",
						"Title": "Hub",
						"Subtitle": "Presents information from different sources in a scrollable view.",
						"ImagePath": "ms-appx:///Assets/Hub.png",
						"Description": "Use a Hub to display information from different source in a single scrollable view.  Hub can also be used to show categorical information in a separated section format.",
						"Content": "<p>This page shows a simplified <b>Hub</b> control with minimal content to demonstrate basic <b>Hub</b> usage. Look at the <i>HubPage.xaml</i> file in Visual Studio to see the full code for this page.</p><p>A <b>Hub</b> control typically takes up the full page. The app home uses a more fully implemented <b>Hub</b> that demonstrates this. Look at the <i>MainPage.xaml</i> file in Visual Studio to see the full code for the home page <b>Hub</b>.</p>",
						"IsNew": false,
						"Docs": [
							{
								"Title": "Hub",
								"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.hub.aspx"
							},
							{
								"Title": "HubSection",
								"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.hubsection.aspx"
							}
						],
						"RelatedControls": [
							"Pivot",
							"SemanticZoom",
							"ListView",
							"GridView"
						]
					},
					{
						"UniqueId": "NavigationView",
						"Title": "NavigationView",
						"Subtitle": "Common vertical layout for top-level areas of your app via a collapsible navigation menu.",
						"ImagePath": "ms-appx:///Assets/NavigationView.png",
						"Description": "The navigation view control provides a common vertical layout for top-level areas of your app via a collapsible navigation menu.",
						"Content": "",
						"IsNew": true,
											"Docs": [
												{
													"Title": "NavigationView",
													"Uri": "https://docs.microsoft.com/uwp/api/Windows.UI.Xaml.Controls.NavigationView"
												}
											],
						"RelatedControls": [
							"SplitView",
							"Pivot"
						]
					},
					{
						"UniqueId": "Pivot",
						"Title": "Pivot",
						"Subtitle": "Presents information from different sources in a tabbed view.",
						"ImagePath": "ms-appx:///Assets/Pivot.png",
						"Description": "A Pivot allows you to show a collection of items from different sources in a tabbed view.",
						"Content": "<p>This page shows a simplified <b>Pivot</b> control with minimal content to demonstrate basic <b>Pivot</b> usage. Look at the <i>PivotPage.xaml</i> file in Visual Studio to see the full code for this page.</p><p>A <b>Pivot</b> control typically takes up the full page.</p>",
						"IsNew": false,
						"Docs": [
							{
								"Title": "Pivot",
								"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.pivot.aspx"
							}
						],
						"RelatedControls": [
							"Hub",
							"SemanticZoom",
							"ListView",
							"GridView"
						]
					}
				]
			},
			{
				"UniqueId": "RichContent",
				"Title": "Rich Content",
				"Subtitle": "Image, InkCanvas, MediaElement",
				"ImagePath": "\uE102",
				"Description": "Use media controls to display images and videos. Use ink to capture strokes and display them.",
				"Items": [
					{
						"UniqueId": "Image",
						"Title": "Image",
						"Subtitle": "A control to display image content.",
						"ImagePath": "ms-appx:///Assets/Image.png",
						"Description": "You can use an Image control to show and scale images.",
						"Content": "<p>Look at the <i>ImagePage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
						"IsNew": false,
						"Docs": [
							{
								"Title": "Image",
								"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.image.aspx"
							},
							{
								"Title": "Quickstart: Image and ImageBrush",
								"Uri": "https://msdn.microsoft.com/en-us/library/windows/apps/xaml/hh868203.aspx"
							}
						],
						"RelatedControls": [
							"MediaElement",
							"PersonPicture"
						]
					},
					{
						"UniqueId": "InkCanvas",
						"Title": "InkCanvas",
						"Subtitle": "A control to capture and display strokes.",
						"ImagePath": "ms-appx:///Assets/InkCanvas.png",
						"Description": "You can use an InkCanvas to capture strokes and display them.  You can also change the way the strokes are displayed through the InkDrawingAttributes.",
						"Content": "<p>Look at the <i>InkCanvasPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
						"IsNew": false,
						"Docs": [
							{
								"Title": "InkCanvas",
								"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.inkcanvas.aspx"
							}
						],
						"RelatedControls": [
							"Canvas",
							"InkToolbar"
						]
					},
					{
						"UniqueId": "InkToolbar",
						"Title": "InkToolbar*",
						"Subtitle": "A collection of buttons that activate features in an associated InkCanvas.",
						"ImagePath": "ms-appx:///Assets/InkCanvas.png",
						"Description": "A collection of buttons that activate features in an associated InkCanvas.",
						"Content": "",
						"IsNew": false,
						"Docs": [
							{
								"Title": "InkToolbar",
								"Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.inktoolbar.aspx"
							}
						],
						"RelatedControls": [
							"Canvas",
							"InkCanvas"
						]
					},
					{
						"UniqueId": "MapControl",
						"Title": "MapControl*",
						"Subtitle": "Displays an interactive map.",
						"ImagePath": "ms-appx:///Assets/MapControl.png",
						"Description": "Displays an interactive map.",
						"Content": "",
						"IsNew": false,
						"Docs": [
							{
								"Title": "MapControl",
								"Uri": "https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.controls.maps.mapcontrol"
							}
						],
						"RelatedControls": [
							"Image"
						]
					},
					{
						"UniqueId": "MediaElement",
						"Title": "MediaElement",
						"Subtitle": "A control to display video and image content.",
						"ImagePath": "ms-appx:///Assets/MediaElement.png",
						"Description": "You can use a MediaElement control to playback videos and show images. You can show transport controls or make the video autoplay.",
						"Content": "<p>Look at the <i>MediaElementPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
						"IsNew": false,
						"Docs": [
							{
								"Title": "MediaElement",
								"Uri": "https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.controls.mediaelement"
							},
							{
								"Title": "Media Playback",
								"Uri": "http://windowsstyleguide/controls-and-patterns/media-playback/"
							}
						],
						"RelatedControls": [
							"Image",
							"MediaPlayerElement"
						]
					},
					{
						"UniqueId": "MediaPlayerElement",
						"Title": "MediaPlayerElement",
						"Subtitle": "A control to display video and image content.",
						"ImagePath": "ms-appx:///Assets/MediaElement.png",
						"Description": "This control is the newer version of MediaElement.",
						"Content": "",
						"IsNew": false,
						"Docs": [
							{
								"Title": "MediaPlayerElement",
								"Uri": "https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.controls.MediaPlayerElement"
							},
							{
								"Title": "Media Playback",
								"Uri": "http://windowsstyleguide/controls-and-patterns/media-playback/"
							}
						],
						"RelatedControls": [
							"Image",
							"MediaElement"
						]
					},
					{
						"UniqueId": "PersonPicture",
						"Title": "PersonPicture",
						"Subtitle": "Displays the picture of a person/contact.",
						"ImagePath": "ms-appx:///Assets/PersonPicture.png",
						"Description": "Displays the picture of a person/contact.",
						"Content": "",
						"IsNew": true,
											"Docs": [
																							{
																								"Title": "PersonPicture",
																								"Uri": "https://docs.microsoft.com/en-us/uwp/api/Windows.UI.Xaml.Controls.PersonPicture"
																							}
											],
						"RelatedControls": [
							"Image"
						]
					},
					{
						"UniqueId": "WebView",
						"Title": "WebView*",
						"Subtitle": "Hosts HTML content in an app.",
						"ImagePath": "ms-appx:///Assets/WebView.png",
						"Description": "Hosts HTML content in an app.",
						"Content": "",
						"IsNew": false,
						"Docs": [
							{
								"Title": "WebView",
								"Uri": "https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.controls.webview"
							}
						],
						"RelatedControls": [
							"RichTextBlock"
						]
					}
				]
			},
			{
				"UniqueId": "Styles",
				"Title": "Styles",
				"Subtitle": "Acrylic and Reveal",
				"ImagePath": "\uE2B1",
				"Description": "Acrylic and Reveal",
				"Items": [
          {
            "UniqueId": "Acrylic",
            "Title": "Acrylic",
            "Subtitle": "A translucent material recommended for panel backgrounds.",
            "ImagePath": "ms-appx:///Assets/AcrylicBrush.png",
            "Description": "A translucent material recommended for panel backgrounds.",
            "Content": "",
            "IsNew": true,
            "Docs": [
              {
                "Title": "Acrylic",
                "Uri": "https://docs.microsoft.com/windows/uwp/style/"
              }
            ],
            "RelatedControls": [
              "Reveal"
            ]
          },
          {
            "UniqueId": "Reveal",
            "Title": "Reveal",
            "Subtitle": "A material that changes color near the mouse.",
            "ImagePath": "ms-appx:///Assets/Reveal.png",
            "Description": "A material that changes color near the mouse.",
            "Content": "",
            "IsNew": true,
            "Docs": [
              {
                "Title": "Reveal",
                "Uri": "https://docs.microsoft.com/windows/uwp/style/"
              }
            ],
            "RelatedControls": [
              "Acrylic"
            ]
          }

				]
			},
    {
      "UniqueId": "Text",
      "Title": "Text controls",
      "Subtitle": "AutoSuggestBox, PasswordBox, RichEditBox, RichTextBlock, TextBlock, TextBox",
      "ImagePath": "ms-appx:///Assets/NavigationViewItemIcons/TextIcon.png",
      "Description": "Use text controls to display or edit plain text and other rich content.",
      "Items": [
        {
          "UniqueId": "AutoSuggestBox",
          "Title": "AutoSuggestBox",
          "Subtitle": "A control to provide suggestions as a user is typing.",
          "ImagePath": "ms-appx:///Assets/AutoSuggestBox.png",
          "Description": "A text control that makes suggestions to users as they type. The app is notified when text has been changed by the user and is responsible for providing relevant suggestions for this control to display.",
          "Content": "<p>Look at the <i>AutoSuggestBoxPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "AutoSuggestBox",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.autosuggestbox.aspx"
            }
          ],
          "RelatedControls": [
            "ListBox",
            "ComboBox",
            "TextBox"
          ]
        },
        {
          "UniqueId": "PasswordBox",
          "Title": "PasswordBox",
          "Subtitle": "A control for entering passwords.",
          "ImagePath": "ms-appx:///Assets/PasswordBox.png",
          "Description": "A user can enter a single line of non-wrapping text in a PasswordBox control. The text is masked by characters that you can specify by using the PasswordChar property, and you can specify the maximum number of characters that the user can enter by setting the MaxLength property.",
          "Content": "<p>Look at the <i>PasswordBoxPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "PasswordBox",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.passwordbox.aspx"
            },
            {
              "Title": "Quickstart: Adding text input and editing controls",
              "Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/hh700391.aspx"
            }
          ],
          "RelatedControls": [
            "TextBox",
            "TextBlock",
            "RichTextBlock",
            "RichEditBox"
          ]
        },
        {
          "UniqueId": "RichEditBox",
          "Title": "RichEditBox",
          "Subtitle": "A rich text editing control that supports formatted text, hyperlinks, and other rich content.",
          "ImagePath": "ms-appx:///Assets/RichEditBox.png",
          "Description": "You can use a RichEditBox control to enter and edit rich text documents that contain formatted text, hyperlinks, and images. By default, the RichEditBox supports spell checking. You can make a RichEditBox read-only by setting its IsReadOnly property to true.",
          "Content": "<p>On this page, you can type into the <b>RichTextBox</b> control and save it as a RichTextFormat (.rtf) document, or load an existing .rtf document. You can format the text as <b>Bold</b> or <u>Underlined</u>, and change the text color.</p><p>Look at the <i>RichEditBoxPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "RichEditBox",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.richeditbox.aspx"
            },
            {
              "Title": "Quickstart: Adding text input and editing controls",
              "Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/hh700391.aspx"
            }
          ],
          "RelatedControls": [
            "TextBox",
            "RichTextBlock",
            "TextBlock"
          ]
        },
        {
          "UniqueId": "RichTextBlock",
          "Title": "RichTextBlock",
          "Subtitle": "A control that displays formatted text, hyperlinks, inline images, and other rich content.",
          "ImagePath": "ms-appx:///Assets/RichTextBlock.png",
          "Description": "RichTextBlock provides more advanced formatting features than the TextBlock control. You can apply character and paragraph formatting to the text in the RichTextBlock. For example, you can apply Bold, Italic, and Underline to any portion of the text in the control. You can use linked text containers (a RichTextBlock linked to RichTextBlockOverflow elements) to create advanced page layouts.",
          "Content": "<p>Change the width of the app to see how the <b>RichTextBlock</b> overflows into additional columns as the app gets narrower.</p><p>Look at the <i>RichTextBlockPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "RichTextBlock",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.richtextblock.aspx"
            },
            {
              "Title": "Quickstart: Displaying text",
              "Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/hh700392.aspx"
            }
          ],
          "RelatedControls": [
            "TextBlock",
            "TextBox",
            "PasswordBox",
            "RichEditBox",
            "WebView"
          ]
        },
        {
          "UniqueId": "TextBlock",
          "Title": "TextBlock",
          "Subtitle": "A lightweight control for displaying small amounts of text.",
          "ImagePath": "ms-appx:///Assets/TextBlock.png",
          "Description": "TextBlock is the primary control for displaying read-only text in your app. You typically display text by setting the Text property to a simple string. You can also display a series of strings in Run elements and give each different formatting.",
          "Content": "<p>Look at the <i>TextBlockPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "TextBlock",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.textblock.aspx"
            },
            {
              "Title": "Quickstart: Displaying text",
              "Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/hh700392.aspx"
            }
          ],
          "RelatedControls": [
            "TextBox",
            "RichTextBlock",
            "PasswordBox",
            "RichEditBox"
          ]
        },
        {
          "UniqueId": "TextBox",
          "Title": "TextBox",
          "Subtitle": "A single-line or multi-line plain text field.",
          "ImagePath": "ms-appx:///Assets/TextBox.png",
          "Description": "Use a TextBox to let a user enter simple text input in your app. You can add a header and placeholder text to let the user know what the TextBox is for, and you can customize it in other ways.",
          "Content": "<p>Look at the <i>TextBoxPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsNew": false,
          "Docs": [
            {
              "Title": "TextBox",
              "Uri": "http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.textbox.aspx"
            },
            {
              "Title": "Quickstart: Adding text input and editing controls",
              "Uri": "http://msdn.microsoft.com/en-us/library/windows/apps/hh700391.aspx"
            }
          ],
          "RelatedControls": [
            "TextBlock",
            "RichTextBlock",
            "PasswordBox",
            "RichEditBox",
            "AutoSuggestBox"
          ]
        }
      ]
    }
  ]
}