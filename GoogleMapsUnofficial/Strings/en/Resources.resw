<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="aboutSettingsText" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="noToastsTB.Text" xml:space="preserve">
    <value>There are no toasts in your collection.</value>
  </data>
  <data name="importToastsTB.Text" xml:space="preserve">
    <value>Click here to import some.</value>
  </data>
  <data name="albumsHeader.Text" xml:space="preserve">
    <value>Breads</value>
  </data>
  <data name="appearenceHeader.Text" xml:space="preserve">
    <value>Appearence</value>
  </data>
  <data name="backBtn.ToolTipService.ToolTip" xml:space="preserve">
    <value>Go back to toasts list</value>
  </data>
  <data name="suggestionRB.Content" xml:space="preserve">
    <value>Suggestion</value>
    <comment>(Do not omit the semi colon here.)</comment>
  </data>
  <data name="questionRB.Content" xml:space="preserve">
    <value>Question</value>
    <comment>(Do not omit the semi colon here.)</comment>
  </data>
  <data name="kudosRB.Content" xml:space="preserve">
    <value>Kudos</value>
    <comment>(Do not omit the semi colon here.)</comment>
  </data>
  <data name="changeAccentCheckBox.Content" xml:space="preserve">
    <value>Change Accent Color By Album Art</value>
  </data>
  <data name="changeAccentHelpText.Text" xml:space="preserve">
    <value>Enabling this makes the player adapt the accent color according to the album art of the currently playing song.</value>
  </data>
  <data name="changeAlbumArtMenuItem.Text" xml:space="preserve">
    <value>Change Album Art</value>
  </data>
  <data name="contactMeTB.Text" xml:space="preserve">
    <value>Contact me:</value>
    <comment>(Do not omit the semi colon here.)</comment>
  </data>
  <data name="contributorsHeader.Text" xml:space="preserve">
    <value>Contributors</value>
  </data>
  <data name="creditsHeader.Text" xml:space="preserve">
    <value>Credits</value>
  </data>
  <data name="deleteFromPlaylistMenuItem.Text" xml:space="preserve">
    <value>Delete from playlist</value>
  </data>
  <data name="deletePlaylistMenuItem.Text" xml:space="preserve">
    <value>Delete playlist</value>
  </data>
  <data name="disableMultiSelectMenuItem.Text" xml:space="preserve">
    <value>Disable multi selection</value>
  </data>
  <data name="enableBlurCheckBox.Content" xml:space="preserve">
    <value>Enable Blur</value>
  </data>
  <data name="enableBlurHelpText.Text" xml:space="preserve">
    <value>Blur is performance heavy and is not recommended on low-end devices. Please use with caution.</value>
  </data>
  <data name="enableEqToggleSwitch.OffContent" xml:space="preserve">
    <value>Equalizer Off</value>
  </data>
  <data name="enableEqToggleSwitch.OnContent" xml:space="preserve">
    <value>Equalizer On</value>
  </data>
  <data name="enableMultiSelectMenuItem.Text" xml:space="preserve">
    <value>Enable multi selection</value>
  </data>
  <data name="facebookBtn.ToolTipService.ToolTip" xml:space="preserve">
    <value>Click to go to our facebook page.</value>
  </data>
  <data name="favoritesMenuItem.Label" xml:space="preserve">
    <value>Favorite Toasts</value>
  </data>
  <data name="favoritesMenuItem.Tooltip" xml:space="preserve">
    <value>Navigate to your favorite toasts.</value>
  </data>
  <data name="githubBtn.ToolTipService.ToolTip" xml:space="preserve">
    <value>Click to go to our github project page.</value>
  </data>
  <data name="importFolderTB.Text" xml:space="preserve">
    <value>Import folder</value>
  </data>
  <data name="importPlaylistTB.Text" xml:space="preserve">
    <value>Import playlists</value>
  </data>
  <data name="newPlaylistTB.Text" xml:space="preserve">
    <value>New playlist</value>
  </data>
  <data name="lastfmCredit.Text" xml:space="preserve">
    <value>Last.fm for artist &amp;amp; album info.</value>
  </data>
  <data name="lastfmLoginBtn.Content" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="lastfmLoginBtn.ToolTipService.ToolTip" xml:space="preserve">
    <value>Log in to your Last.fm account</value>
  </data>
  <data name="lastfmPasswordTextBlock.PlaceholderText" xml:space="preserve">
    <value>Enter Your Last.fm Password Here...</value>
    <comment>(Respect the ellipsis at the end.)</comment>
  </data>
  <data name="lastfmPasswordTextBlock.Header" xml:space="preserve">
    <value>Password:</value>
    <comment>(Do not omit the semicolon at the end.)</comment>
  </data>
  <data name="lastfmUsernameTextBlock.PlaceholderText" xml:space="preserve">
    <value>Enter Your Last.fm Username Here...</value>
    <comment>(Respect the ellipsis at the end.)</comment>
  </data>
  <data name="lastfmUsernameTextBlock.Header" xml:space="preserve">
    <value>Username:</value>
    <comment>(Do not omit the semicolon at the end.)</comment>
  </data>
  <data name="leaveReviewBtn.Content" xml:space="preserve">
    <value>Leave a review</value>
  </data>
  <data name="toastsPivot.Header" xml:space="preserve">
    <value>Toasts</value>
  </data>
  <data name="licenseHeader.Text" xml:space="preserve">
    <value>License</value>
  </data>
  <data name="licenseText.Text" xml:space="preserve">
    <value>This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.</value>
    <comment>Just Google for your language's version of GNU GPL License OR DONT CHANGE THIS AT ALL!!</comment>
  </data>
  <data name="listItemAddBtn.ToolTipService.ToolTip" xml:space="preserve">
    <value>Add this toast to a playlist or now baking queue</value>
  </data>
  <data name="listItemPlayBtn.ToolTipService.ToolTip" xml:space="preserve">
    <value>Play Toast</value>
  </data>
  <data name="lockscreenHeader.Text" xml:space="preserve">
    <value>Lockscreen</value>
  </data>
  <data name="mailBtn.ToolTipService.ToolTip" xml:space="preserve">
    <value>Click to mail us.</value>
  </data>
  <data name="muteBtn.ToolTipService.ToolTip" xml:space="preserve">
    <value>Mute Volume</value>
  </data>
  <data name="nowBakingMenuItem.Label" xml:space="preserve">
    <value>Now Baking</value>
  </data>
  <data name="nowBakingMenuItem.Tooltip" xml:space="preserve">
    <value>Navigate to your now baking toasts.</value>
  </data>
  <data name="openFileBtn.ToolTipService.ToolTip" xml:space="preserve">
    <value>Open a file to play</value>
  </data>
  <data name="openSongLocationMenuItem.Text" xml:space="preserve">
    <value>Open toast location</value>
  </data>
  <data name="playlistMore.ToolTipService.ToolTip" xml:space="preserve">
    <value>Show more options.</value>
  </data>
  <data name="playlistPlayAllBtn.ToolTipService.ToolTip" xml:space="preserve">
    <value>Play all toasts in this playlist</value>
  </data>
  <data name="playlistPlayAllTextBlock.Text" xml:space="preserve">
    <value> Play all</value>
    <comment>(Respect the whitespace at the beginning.)</comment>
  </data>
  <data name="playMenuItem.Text" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="preventScreenLockingCheckBox.Content" xml:space="preserve">
    <value>Prevent screen from locking.</value>
  </data>
  <data name="preventScreenLockingFurtherInfoText.Text" xml:space="preserve">
    <value>This feature is extremely battery consuming and hence, is not persisted through sessions.</value>
  </data>
  <data name="preventScreenLockingInfoText.Text" xml:space="preserve">
    <value>Enabling this will prevent the OS from locking the screen after regular intervals.</value>
  </data>
  <data name="propertiesMenuItem.Text" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="musicHistoryMenuItem.Label" xml:space="preserve">
    <value>Toast History</value>
  </data>
  <data name="musicHistoryMenuItem.Tooltip" xml:space="preserve">
    <value>Navigate to your toast history.</value>
  </data>
  <data name="redditBtn.ToolTipService.ToolTip" xml:space="preserve">
    <value>Click to go to our reddit profile.</value>
  </data>
  <data name="relocateSongMenuItem.Text" xml:space="preserve">
    <value>Relocate Toast</value>
  </data>
  <data name="renamePlaylistMenuItem.Text" xml:space="preserve">
    <value>Rename playlist.</value>
  </data>
  <data name="replaceLockscreenCheckBox.Content" xml:space="preserve">
    <value>Replace lockscreen wallpaper with album art.</value>
  </data>
  <data name="replaceLockscreenFurtherInfoText.Text" xml:space="preserve">
    <value>Rest assured that your lockscreen wallpaper will be automatically resetted when you exit the app.</value>
  </data>
  <data name="replaceLockscreenInfoText.Text" xml:space="preserve">
    <value>This will replace the lockscreen wallpaper with currently playing song's album art.</value>
  </data>
  <data name="reportIssueBtn.Content" xml:space="preserve">
    <value>Report an issue</value>
  </data>
  <data name="requestFeatureBtn.Content" xml:space="preserve">
    <value>Request a feature</value>
  </data>
  <data name="resetEverythingBtn.Content" xml:space="preserve">
    <value>Reset Everything</value>
  </data>
  <data name="resetEverythingHelpText.Text" xml:space="preserve">
    <value>This will reset your library, playlists, settings, play history etc.</value>
  </data>
  <data name="resetHeader.Text" xml:space="preserve">
    <value>Reset BreadPlayer</value>
  </data>
  <data name="sendFeedbackBtn.Content" xml:space="preserve">
    <value>Send feedback</value>
  </data>
  <data name="settingsMenuItem.Label" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="settingsMenuItem.Tooltip" xml:space="preserve">
    <value>Navigate to your BreadPlayer's settings.</value>
  </data>
  <data name="showEqualizerBtn.ToolTipService.ToolTip" xml:space="preserve">
    <value>Show Equalizer</value>
  </data>
  <data name="showMoreBtn.ToolTipService.ToolTip" xml:space="preserve">
    <value>Show More Options</value>
  </data>
  <data name="shuffleBtn.ToolTipService.ToolTip" xml:space="preserve">
    <value>Shuffle</value>
  </data>
  <data name="songsHeader.Text" xml:space="preserve">
    <value>Toasts</value>
  </data>
  <data name="stopPlayingAfterMenuItem.Text" xml:space="preserve">
    <value>Stop Playing After This Toast</value>
  </data>
  <data name="themeChangeToggleSwitch.OffContent" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="themeChangeToggleSwitch.OnContent" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="themeHelpText.Text" xml:space="preserve">
    <value>Change of theme requires shutdown.</value>
  </data>
  <data name="themeText.Text" xml:space="preserve">
    <value>Theme:</value>
    <comment>(Do not omit the semi colon here.)</comment>
  </data>
  <data name="yourMusicMenuItem.Label" xml:space="preserve">
    <value>Toasts Collection</value>
  </data>
  <data name="yourMusicMenuItem.Tooltip" xml:space="preserve">
    <value>Navigate to your toast collection.</value>
  </data>
  <data name="twitterBtn.ToolTipService.ToolTip" xml:space="preserve">
    <value>Click to go to our twitter profile.</value>
  </data>
  <data name="version.Text" xml:space="preserve">
    <value>v2.7.9.0-beta</value>
    <comment>represents current version of Bread Player</comment>
  </data>
  <data name="versionHeader.Text" xml:space="preserve">
    <value>Version</value>
    <comment>represents the version header</comment>
  </data>
  <data name="volumeBtn.ToolTipService.ToolTip" xml:space="preserve">
    <value>Volume</value>
  </data>
  <data name="bakerInfoPivot.Header" xml:space="preserve">
    <value>Baker Biography</value>
  </data>
  <data name="lyricsPivot.Header" xml:space="preserve">
    <value>Lyrics</value>
  </data>
  <data name="nowPlayingPivot.Header" xml:space="preserve">
    <value>Now Baking</value>
  </data>
  <data name="addToFavCmd.Text" xml:space="preserve">
    <value>Add to favorites</value>
  </data>
  <data name="basicCommandsHeader.Text" xml:space="preserve">
    <value>Basic Commands</value>
  </data>
  <data name="basicCommandsInfo.Text" xml:space="preserve">
    <value>These commands will work from everywhere.</value>
  </data>
  <data name="commandsHeader.Text" xml:space="preserve">
    <value>Commands</value>
  </data>
  <data name="contactSettingsText" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="deleteSongCmd.Text" xml:space="preserve">
    <value>Delete toast</value>
  </data>
  <data name="helpfulLinksHeader.Text" xml:space="preserve">
    <value>Helpful Links</value>
  </data>
  <data name="keyBindingsHeader.Text" xml:space="preserve">
    <value>Key Bindings</value>
  </data>
  <data name="keyBindingsPivot.Header" xml:space="preserve">
    <value>Key Bindings</value>
  </data>
  <data name="muteCmd.Text" xml:space="preserve">
    <value>Mute</value>
  </data>
  <data name="nextCmd.Text" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="openFileCmd.Text" xml:space="preserve">
    <value>Open file</value>
  </data>
  <data name="playPauseCmd.Text" xml:space="preserve">
    <value>Play/Pause</value>
  </data>
  <data name="playSongCmd.Text" xml:space="preserve">
    <value>Play Toast</value>
  </data>
  <data name="prevCmd.Text" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="repeatCmd.Text" xml:space="preserve">
    <value>Repeat</value>
  </data>
  <data name="seekBackwardCmd.Text" xml:space="preserve">
    <value>Seek Backward</value>
  </data>
  <data name="seekForwardCmd.Text" xml:space="preserve">
    <value>Seek Forward</value>
  </data>
  <data name="showEQCmd.Text" xml:space="preserve">
    <value>Show Equalizer</value>
  </data>
  <data name="showPropsCmd.Text" xml:space="preserve">
    <value>Show Properties</value>
  </data>
  <data name="showTagsCmd.Text" xml:space="preserve">
    <value>Show Tags</value>
  </data>
  <data name="shuffleCmd.Text" xml:space="preserve">
    <value>Shuffle</value>
  </data>
  <data name="toastLibraryCmdsHeader.Text" xml:space="preserve">
    <value>Toast Library Commands</value>
  </data>
  <data name="toastLibraryCmdsInfoText.Text" xml:space="preserve">
    <value>These commands will work only when a Toast is focused.</value>
  </data>
  <data name="volDownCmd.Text" xml:space="preserve">
    <value>Volume Down</value>
  </data>
  <data name="volUpCmd.Text" xml:space="preserve">
    <value>Volume Up</value>
  </data>
  <data name="contributeCodeTxt.Text" xml:space="preserve">
    <value>Contribute Code</value>
  </data>
  <data name="contributeSettingsText" xml:space="preserve">
    <value>Contribute</value>
  </data>
  <data name="helpTranslateTxt.Text" xml:space="preserve">
    <value>Help us Translate</value>
    <comment>!!!NEW!!!</comment>
  </data>
  <data name="testForUsTxt.Text" xml:space="preserve">
    <value>Help us debug</value>
    <comment>!!!NEW!!!</comment>
  </data>
  <data name="donatePatreonTxt.Text" xml:space="preserve">
    <value>Donate via Patreon</value>
  </data>
  <data name="crossfadeSwitch.Header" xml:space="preserve">
    <value>Crossfade when changing songs</value>
    <comment>**NEW**</comment>
  </data>
  <data name="generalHeader.Text" xml:space="preserve">
    <value>General</value>
    <comment>**NEW**</comment>
  </data>
  <data name="watchAnAdMenuItem.Label" xml:space="preserve">
    <value>Donate</value>
  </data>
  <data name="watchAnAdMenuItem.Tooltip" xml:space="preserve">
    <value>Tap to see donation options.</value>
  </data>
  <data name="bugReportRB.Content" xml:space="preserve">
    <value>Bug report</value>
  </data>
  <data name="otherRB.Content" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="sendBtn.Content" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="backgroundOverlayHelpText.Text" xml:space="preserve">
    <value>This is the overlay color of album art on the player background. Restart is required for this change to take effect.</value>
  </data>
  <data name="backgroundOverlayHeader.Text" xml:space="preserve">
    <value>Background blur overlay color:</value>
  </data>
  <data name="personlizationSettingsText" xml:space="preserve">
    <value>Personalization</value>
  </data>
  <data name="indebtedTB.Text" xml:space="preserve">
    <value>BreadPlayer is indebted to these great people for their dedication and support.</value>
  </data>
  <data name="shuffleAllRun.Text" xml:space="preserve">
    <value>Shuffle all</value>
  </data>
  <data name="lastfmLogoutBtn.Content" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="lastfmLogoutBtn.ToolTipService.ToolTip" xml:space="preserve">
    <value>Log out of your Last.fm account</value>
  </data>
  <data name="breadsHeader" xml:space="preserve">
    <value>Breads</value>
  </data>
  <data name="playlistsHeader" xml:space="preserve">
    <value>Playlists</value>
  </data>
  <data name="donationTipTB.Text" xml:space="preserve">
    <value>Support me financially by becoming my Patron on Patreon. Patrons will get awesome rewards like early betas, ability to vote on ideas, and access to my Patreon post stream.</value>
  </data>
  <data name="patronBtn.Content" xml:space="preserve">
    <value>Become a Patron</value>
  </data>
  <data name="translationTipTB.Text" xml:space="preserve">
    <value>Help me translate this beast into your native language and make BreadPlayer easy for your countrymen to use. All translators get their name in the contributors list.</value>
  </data>
  <data name="translatorBtn.Content" xml:space="preserve">
    <value>Become a Translator</value>
  </data>
  <data name="becomeACoderBtn.Content" xml:space="preserve">
    <value>Become a Coder</value>
  </data>
  <data name="codeContributionTipTB.Text" xml:space="preserve">
    <value>If you are a developer, I would tremendously appreciate your help. No need to worry, you will have my help all the way. All developers get their names in the contributors list.</value>
  </data>
  <data name="testerBtn.Content" xml:space="preserve">
    <value>Become a BetaTester</value>
  </data>
  <data name="testingTipTB.Text" xml:space="preserve">
    <value>Become a tester and help us debug. Debugging is really easy; just play around and report the bugs you encounter.</value>
  </data>
  <data name="deviceBufferSizeTB.Text" xml:space="preserve">
    <value>Device Buffer Size:</value>
  </data>
  <data name="deviceBufferSizeHelpText.Text" xml:space="preserve">
    <value>Increase this value if you are experiencing clipping or interruptions in audio. Restart is needed for this change to take effect.</value>
  </data>
  <data name="songNotificationsCheckBox.Content" xml:space="preserve">
    <value>Show upcoming song notifications</value>
  </data>
  <data name="tileNotificationsCheckBox.Content" xml:space="preserve">
    <value>Show tile notifications</value>
  </data>
  <data name="keyboardSettingsText" xml:space="preserve">
    <value>Keyboard Bindings</value>
  </data>
  <data name="coreSettingsText" xml:space="preserve">
    <value>Core</value>
  </data>
  <data name="audioSettingsText" xml:space="preserve">
    <value>Audio</value>
  </data>
  <data name="accountsSettingsText" xml:space="preserve">
    <value>Accounts</value>
  </data>
  <data name="accountsSettingsSubtitle" xml:space="preserve">
    <value>Last.fm, lyrics</value>
  </data>
  <data name="personalizationSettingsSubtitle" xml:space="preserve">
    <value>Background, font, theme</value>
  </data>
  <data name="coreSettingsSubtitle" xml:space="preserve">
    <value>Reset, notifications, lock screen</value>
  </data>
  <data name="audioSettingsSubtitle" xml:space="preserve">
    <value>Equalizer, volume, cross-fade</value>
  </data>
  <data name="keyboardSettingsSubtitle" xml:space="preserve">
    <value>Keyboard shortcuts</value>
  </data>
  <data name="contactSettingsSubtitle" xml:space="preserve">
    <value>Facebook, email, github</value>
  </data>
  <data name="aboutSettingsSubtitle" xml:space="preserve">
    <value>Version info, license, credits</value>
  </data>
  <data name="contributeSettingsSubtitle" xml:space="preserve">
    <value>Translation, bug hunting, coding</value>
  </data>
  <data name="recentlyPlayedPivot.Header" xml:space="preserve">
    <value>Recently Played</value>
  </data>
  <data name="mostPlayedPivot.Header" xml:space="preserve">
    <value>Most Played</value>
  </data>
  <data name="recentlyAddedPivot.Header" xml:space="preserve">
    <value>Recently Added</value>
  </data>
  <data name="bakersHeader.Text" xml:space="preserve">
    <value>Bakers</value>
  </data>
  <data name="showAllTB.Text" xml:space="preserve">
    <value>Show all</value>
  </data>
  <data name="bakersInfoTB.Text" xml:space="preserve">
    <value>Bakers Information</value>
  </data>
  <data name="bakersInfoCB.Header" xml:space="preserve">
    <value>Choose no. of artist(s) to fetch info for:</value>
  </data>
  <data name="lyricsTB.Text" xml:space="preserve">
    <value>Lyrics</value>
  </data>
  <data name="lyricTypeCB.Header" xml:space="preserve">
    <value>Choose lyric type:</value>
  </data>
  <data name="lyricSourceCB.Header" xml:space="preserve">
    <value>Choose lyric source:</value>
  </data>
  <data name="notificationsHeader.Text" xml:space="preserve">
    <value>Notifications</value>
  </data>
</root>